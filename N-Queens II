class Solution {
public:
    bool conflict(std::vector<int> places,int row){
        //前row行是否有冲突
        if(row == 0)return false;
        for(int i=0;i<row;i++){
            if(places[i] == places[row] || abs(row-i)==abs(places[i]-places[row]))return true;
        }
        return false;
    }

    void setQueens(int row,int n,vector<int> places,int&res){
    	if(row == n){
    		res++;
    		return;
    	}
    	for (int i = 0; i < n; ++i)
    	{
    		places[row] = i;
    		if(!conflict(places,row))
    			setQueens(row+1,n,places,res);
    	}
    }

    int totalNQueens(int n) {
        std::vector<int> v(n,0);
        int res=0;
        setQueens(0,n,v,res);
        return res;
    }
};
