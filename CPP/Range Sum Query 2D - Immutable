class NumMatrix {
private:
	vector<vector<int>> sums;
public:
	NumMatrix(vector<vector<int>> &matrix) {
		sums.clear();
		sums = matrix;
		if(matrix.empty())return;
		for (int i = 1; i < matrix[0].size(); ++i)
		{
			sums[0][i] +=sums[0][i-1];
		}
		for (int i = 1; i < matrix.size(); ++i)
		{
			sums[i][0]+=sums[i-1][0];
		}
		for (int i = 1; i < matrix.size(); ++i)
		{
			for (int j = 1; j < matrix[0].size(); ++j)
			{
				sums[i][j] = (matrix[i][j]+sums[i-1][j] + sums[i][j-1] - sums[i-1][j-1]);
			}
		}
	}

	int sumRegion(int row1, int col1, int row2, int col2) {
		if (row1==0 && col1==0)
		{
			return sums[row2][col2];
		}else if (row1==0)
		{
			return sums[row2][col2] - sums[row2][col1-1];
		}else if (col1 == 0)
		{
			return sums[row2][col2] - sums[row1-1][col2];
		}else{
			return sums[row2][col2] - sums[row2][col1-1] - sums[row1-1][col2] + sums[row1-1][col1-1];
		}
	}
};


// Your NumMatrix object will be instantiated and called as such:
// NumMatrix numMatrix(matrix);
// numMatrix.sumRegion(0, 1, 2, 3);
// numMatrix.sumRegion(1, 2, 3, 4);
