class Solution {
public:
	bool containsAllChar(map<char, int> &s,map<char, int> &t){
		for (auto i : t)
		{
			if (s[i.first] < t[i.first])
			{
				return false;
			}
		}
		return true;
	}
	string minWindow(string s, string t) {
		string res = "";
		std::map<char, int> myMaps, myMapt;
		set<char>st;
		for (auto e : t)
		{
			st.insert(e);
			myMapt[e]++;
			myMaps[e] = 0;
		}
		int start = 0, end = 0;      //维持窗口大小的两个指针
		while (end<s.size()){
			while (!containsAllChar(myMaps, myMapt) && end<s.size()){
				if (st.find(s[end]) == st.end()){ ++end; continue; }
				else{
					myMaps[s[end++]]++;
				}
			}
			
			if(containsAllChar(myMaps,myMapt)) {
				//containsAllChar
				while (containsAllChar(myMaps, myMapt)){
					if (st.find(s[start]) == st.end()){ ++start; continue; }
					else{
						if (myMapt[s[start]] == myMaps[s[start]])
						{
							if (res.empty())res =  s.substr(start, end - start);
							else{
								res = res.size() < (end - start) ? res : s.substr(start, end - start);
							}	
							myMaps[s[start++]]--;
							break;
						}
						else{
							myMaps[s[start]]--;
							++start;
						}
					}
				}
			}
		}
		return res;
	}
};
