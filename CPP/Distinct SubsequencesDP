class Solution {
public:
    int numDistinct(string s, string t) {
    	if (s.size()<t.size())
    	{
    		return 0;
    	}
    	if (s==t)
    	{
    		return 1;
    	}
        vector<vector<int>> dp(t.size(),vector<int>(s.size(),0));
        if (s[0] == t[0])
        {
        	dp[0][0] = 1;
        }
        for (int i = 1; i < s.size(); ++i)
        {
        	dp[0][i] = (s[i] == t[0])?(dp[0][i-1]+1):(dp[0][i-1]);
        }
        for (int i = 1; i < t.size(); ++i)
        {
        	for (int j = i; j < s.size(); ++j)
        	{
        		dp[i][j] = dp[i][j-1];
        		if (t[i] == s[j])
        		{
        			dp[i][j] +=dp[i-1][j-1];
        		}
        	}
        }
        return dp.back().back();

    }
};
