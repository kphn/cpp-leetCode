/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBSTHelper(vector<int>& nums,int start,int end){
        TreeNode*root;
		if(start>end)return NULL;
        if (start==end)
        {
            root = new TreeNode(nums[start]);
        }else{
            int mid = (start+end+1)>>1;
            root = new TreeNode(nums[mid]);
            root->left = sortedArrayToBSTHelper(nums,start,mid-1);
            root->right = sortedArrayToBSTHelper(nums,mid+1,end);
        }
        return root;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        if(nums.empty())return NULL;
        return sortedArrayToBSTHelper(nums,0,nums.size()-1);
    }
    TreeNode* sortedListToBST(ListNode* head) {
        vector<int>v;
        ListNode*start = head;
        while(start){
            v.push_back(start->val);
            start = start->next;
        }
        return sortedArrayToBST(v);
    }
};
