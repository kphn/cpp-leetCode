/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void recoverTree(TreeNode* root) {
        //using O(n) space
        vector<TreeNode*> list;  
        vector<int > vals;  
        InOrderTravel(root, list, vals);  
        sort(vals.begin(), vals.end());  
        for(int i =0; i< list.size(); i++)  
           {  
                list[i]->val = vals[i];  
           }   
    }
    void InOrderTravel(TreeNode* node, vector<TreeNode*>& list, vector<int>& vals)  
      {  
           if(node == NULL) return;  
           InOrderTravel(node->left, list, vals);  
            list.push_back(node);  
           vals.push_back(node->val);  
            InOrderTravel(node->right, list, vals);            
      }  
};
