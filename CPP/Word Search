class Solution {
public:
	bool dfs(vector<vector<char>>& board, string &word,int i,int j,int pos){
		if(pos == word.size())return true;
		if(i<0 || i>=board.size() || j<0 || j>=board[0].size() || board[i][j]!=word[pos])return false;
		int xTo[] = {0,1,0,-1},yTo[] = {1,0,-1,0};
		int x,y;
		char c = board[i][j];
		board[i][j] = '#';
		for (int k = 0; k < 4; ++k)
		{
			x = i+xTo[k];
			y = j+yTo[k];
			if (dfs(board,word,x,y,pos+1))
			{
				return true;
			}

		}
		board[i][j] = c;
		return false;

	}
	bool exist(vector<vector<char>>& board, string word) {
		if (board.empty())
		{
			return false;
		}
		vector<vector<bool>> letterUsed(board.size(),vector<bool>(board[0].size(),false));
		for (int i = 0; i < board.size(); ++i)
		{
			for (int j = 0; j < board[0].size(); ++j)
			{
				if (board[i][j] == word[0])
				{
					if (dfs(board,word,i,j,0))
					{
						return true;
					}
				}
			}
		}
		return false;
	}
};
