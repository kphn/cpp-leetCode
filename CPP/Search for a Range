class Solution {
public:
	int findFirst(vector<int>& nums, int target){
		int l = 0,h= nums.size()-1,mid;
		while(l+1<h){
			mid = (l+h)>>1;
			if (nums[mid] == target)
			{
				h = mid;
			}else if (nums[mid] > target)
			{
				h = mid-1;
			}else{
				l = mid+1;
			}
		}
		if (nums[l] == target)
		{
			return l;
		}else if (nums[h] == target)
		{
			return h;
		}
		return -1;
	}
	int findLast(vector<int>& nums, int target){
		int l=0,h=nums.size()-1,mid;
		while(l+1<h){
			mid = (l+h)>>1;
			if (nums[mid] == target)
			{
				l = mid;
			}else if (nums[mid]>target)
			{
				h = mid-1;
			}else{
				l = mid+1;
			}
		}
		if (nums[h] == target)
		{
			return h;
		}else if (nums[l] == target)
		{
			return l;
		}
		return -1;
	}
    vector<int> searchRange(vector<int>& nums, int target) {
        std::vector<int> v;
        v.push_back(findFirst(nums,target));
        v.push_back(findLast(nums,target));
        return v;
    }
};
