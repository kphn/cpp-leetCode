class Solution {
public:
    int operate(int a,int b,char ch){
        switch(ch){
            case '+':
                return a+b;
            case '-':
                return a-b;
            case '*':
                return a*b;
            case '/':
                return a/b;
        }
    }
    bool isOp(char ch){
        if (ch=='+' || ch=='-' || ch=='*' || ch=='/')
        {
            return true;
        }
        return false;
    }
    bool isCC(char ch){
        if (ch == '*' || ch == '/')
        {
            return true;
        }
        return false;
    }
    int calculate(string s) {
        //先将运算式分成数字和运算符，先做乘除在做加减
        std::vector<int> nums;
        std::vector<char> ops;
        int num=0;
        for (int i = 0; i < s.size(); ++i)
        {
            if (s[i] == ' ')
            {
                continue;
            }
            else if (isdigit(s[i]))
            {
                num = num*10+s[i]-'0';
            }else if(isOp(s[i])){
                if (!ops.empty() && isCC(ops.back()))
                {
                    nums.back() = operate(nums.back(),num,ops.back());
                    ops.pop_back();
                    ops.push_back(s[i]);
                    num=0;
                }else{
                    nums.push_back(num);
                    num=0;
                    ops.push_back(s[i]);
                }
            }
        }
        if (!ops.empty() && isCC(ops.back()))
        {
            nums.back() = operate(nums.back(),num,ops.back());
			ops.pop_back();
        }
        else nums.push_back(num);
        //先做乘除,再做加减
        int res = nums[0];
        for (int i = 0; i < ops.size(); ++i)
        {
            res = operate(res,nums[i+1],ops[i]);
        }
        return res;

    }
};
