class Solution {
public:
    void nextPermutation(vector<int>& nums) {
       //从尾端扫描到第一个前面的值小于后面的值，然后从后往前扫描到第一个比这个大的值并交换,最后将first+1至最后的倒序序列翻转
       int first=-1,last=-1;
       int n = nums.size();
       if(n==1)return;
       if(n==2){
           nums[0]+=nums[1];
           nums[1] = nums[0]-nums[1];
           nums[0]-=nums[1];
           return;
       }
       for(int i=n-1;i>0;i--){
           if(nums[i-1] < nums[i]){
               first = i-1;
               break;
           }
       }
       for(int i=n-1;i>first;i--){
           if(nums[first] < nums[i]){
               last = i;
               break;
           }
       }
       if(first == -1 ){
		   sort(nums.begin(),nums.end());
           return;
       }
       nums[first]+=nums[last];
       nums[last] = nums[first]-nums[last];
       nums[first]-=nums[last];
       for(int j=0;j<(n-first-1)/2;j++){
           int temp = nums[first+1+j];
           nums[first+1+j] = nums[n-1-j];
           nums[n-1-j] = temp;
       }
    }
};
