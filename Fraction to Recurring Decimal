class Solution {
public:
	int find(int numToFind,vector<int>v){
		for(int i=0;i<v.size();i++)
			if(v[i] == numToFind)return i;
		return -1;
	}
    string fractionToDecimal(int numerator, int denominator) {
		vector<int>storeNum;
		string flag="";
		if(numerator<0&&denominator>0 || numerator>0&&denominator<0 )flag = "-";
		long long num = numerator,deno = denominator;
		long long numerator1 = abs(num);
		long long denominator1 = abs(deno);
		//map<int,int>storeNum;
        //int integer=numerator/denominator;
        string integer = flag+std::to_string(numerator1/denominator1);
        numerator1%=denominator1;
		if(numerator1 == 0)return integer;
        string fraction="";
		numerator1*=10;
		while(numerator1!=0 && find(numerator1,storeNum)==-1){
			storeNum.push_back(numerator1);
            fraction += "0";
            fraction.back() += numerator1/denominator1;
            numerator1%=denominator1;
            numerator1*=10;
        }

		if(numerator1 ==0)
			return integer +"."+ fraction.substr(0,fraction.size());
		else{
			int t = find(numerator1,storeNum);
			return integer + "." + fraction.substr(0,t)+"(" + fraction.substr(t,storeNum.size()-t)+")";
		}
    }
};
